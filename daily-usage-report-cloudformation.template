{
    "Description": "AWS Cloudformation Stack to setup AWS usage daily report (by www.awswithchetan.com)",
    "Parameters": {
        "FromEmail": {
            "AllowedPattern": "^\\s*[^\\s@]+@[^\\s@]+\\.[^\\s@]+\\s*$",
            "ConstraintDescription": "Must be valid email id",
            "Description": "Sender Email Id. Example: admin@example.com",
            "Type": "String"
        },
        "ToEmail": {
            "AllowedPattern": "^(\\s*[^\\s@]+@[^\\s@]+\\.[^\\s@]+\\s*,?)+$",
            "ConstraintDescription": "Must be valid email id(s) (use comma separator if multiple email ids)",
            "Description": "Receiver Email Id(s). Example: user1@example.com,user2@example.com",
            "Type": "String"
        },
        "Schedule": {
            "Default": "19",
            "Description": "Hour of the day when email should be sent. Default=19 hrs",
            "MaxValue": "23",
            "MinValue": "0",
            "Type": "Number"
        },
        "SesRegion": {
            "AllowedValues": [
                "us-east-1",
                "us-west-2",
                "eu-west-1"
            ],
            "Default": "us-east-1",
            "Description": "AWS Region for sending email using Amazon SES service",
            "Type": "String"
        },
        "AwsRegions": {
            "Description": "All AWS regions to be scanned for this report. Example: us-east-1,ap-south-1",
			"Default": "us-east-1",
            "Type": "String"
        }
    },
    "Resources": {
        "AWSUsageLambdaFunction": {
            "Properties": {
                "Code": {
                    "S3Bucket": "awswithchetan.com",
                    "S3Key": "assets/cost-optimization/daily-usage-report.zip"
                },
                "Environment": {
                    "Variables": {
                        "RECV_EMAIL": {
                            "Ref": "ToEmail"
                        },
                        "SENDER_EMAIL": {
                            "Ref": "FromEmail"
                        },
                        "SES_REGION": {
                            "Ref": "SesRegion"
                        },
                        "REGIONS": {
                            "Ref": "AwsRegions"
                        }
                    }
                },
                "Handler": "inventory.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "AWSUsageLambdaFunctionIamRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.11",
                "Timeout": "900"
            },
            "Type": "AWS::Lambda::Function"
        },
        "AWSUsageLambdaFunctionIamRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeAddresses",
                                        "ec2:DescribeRegions",
                                        "ec2:DescribeVolumes",
                                        "pricing:GetProducts"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "ses:SendRawEmail",
                                        "ses:ListIdentities",
                                        "ses:ListVerifiedEmailAddresses",
                                        "ses:VerifyEmailAddress"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
								{
									"Effect": "Allow",
									"Action": [
										"logs:CreateLogGroup",
										"logs:CreateLogStream",
										"logs:PutLogEvents"
									],
									"Resource": "*"
								}
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "AWSUsageLambdaFunctionPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
		"ScheduledRule": {
		  "Type": "AWS::Events::Rule",
		  "Properties": {
			"Description": "ScheduledRule",
			"ScheduleExpression": {
				"Fn::Join": [
					"",
					[
						"cron(0 ",
						{
							"Ref": "Schedule"
						},
						" * * ? *)"
					]
				]
			},
			"State": "ENABLED",
			"Targets": [{
			  "Arn": { "Fn::GetAtt": ["AWSUsageLambdaFunction", "Arn"] },
			  "Id": "TargetFunctionV1"
			}]
		  }
		},
		"PermissionForEventsToInvokeLambda": {
		  "Type": "AWS::Lambda::Permission",
		  "Properties": {
			"FunctionName": { "Ref": "AWSUsageLambdaFunction" },
			"Action": "lambda:InvokeFunction",
			"Principal": "events.amazonaws.com",
			"SourceArn": { "Fn::GetAtt": ["ScheduledRule", "Arn"] }
		  }
		}
    }
}
